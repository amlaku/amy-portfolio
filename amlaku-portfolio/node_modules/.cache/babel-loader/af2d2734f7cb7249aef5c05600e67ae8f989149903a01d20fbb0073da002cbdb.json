{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\INSA\\\\Desktop\\\\Back end web development\\\\Portfoilo\\\\amlaku-portfolio\\\\src\\\\PortfolioContainer\\\\Home\\\\Header\\\\Header.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TOTAL_SCREENS, GET_SCREEN_INDEX } from '../../../utilities/commonUtils';\nimport ScrollService from '../../../utilities/ScrollService';\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './Header.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  /* STATES TO BE USED */\n  const [selectedScreen, setSelectedScreen] = useState(0);\n  const [showHeaderOptions, setShowHeaderOptions] = useState(false);\n  const updateCurrentScreen = currentScreen => {\n    if (!currentScreen || !currentScreen.screenInView) return;\n    let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView);\n    if (screenIndex < 0) return;\n    setSelectedScreen(screenIndex);\n  };\n\n  /* SUBSCRIPTIONS */\n  let currentScreenSubscription = ScrollService.currentScreenBroadcaster.subscribe(updateCurrentScreen);\n  const getHeaderOptions = () => {\n    return TOTAL_SCREENS.map((Screen, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getHeaderOptionsClasses(i),\n      onClick: () => switchScreen(i, Screen),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: Screen.screen_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this)\n    }, Screen.screen_name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this));\n  };\n  const getHeaderOptionsClasses = index => {\n    let classes = \"header-option \";\n    if (index < TOTAL_SCREENS.length - 1) classes += \"header-option-seperator \";\n    if (selectedScreen === index) classes += \"selected-header-option \";\n    return classes;\n  };\n  const switchScreen = (index, screen) => {\n    let screenComponent = document.getElementById(screen.screen_name);\n    if (!screenComponent) return;\n    screenComponent.scrollIntoView({\n      behavior: 'smooth'\n    });\n    setSelectedScreen(index);\n    setShowHeaderOptions(false);\n  };\n  useEffect(() => {\n    return () => {\n      /* UNSUBSCRIBE THE SUBSCRIPTIONS */\n      currentScreenSubscription.unsubscribe();\n    };\n  }, [currentScreenSubscription]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header-container\",\n    onClick: () => setShowHeaderOptions(!showHeaderOptions),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-parent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-hamburger\",\n        onClick: () => setShowHeaderOptions(!showHeaderOptions),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"header-hamburger-bars\",\n          icon: faBars\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-logo\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Amlaku~ \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: showHeaderOptions ? \"header-options show-hamburger-options\" : \"header-options\",\n        children: getHeaderOptions()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(Header, \"ujF17CXvQfKrqR4WPi1qhAXORpE=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useEffect","TOTAL_SCREENS","GET_SCREEN_INDEX","ScrollService","faBars","FontAwesomeIcon","jsxDEV","_jsxDEV","Header","_s","selectedScreen","setSelectedScreen","showHeaderOptions","setShowHeaderOptions","updateCurrentScreen","currentScreen","screenInView","screenIndex","currentScreenSubscription","currentScreenBroadcaster","subscribe","getHeaderOptions","map","Screen","i","className","getHeaderOptionsClasses","onClick","switchScreen","children","screen_name","fileName","_jsxFileName","lineNumber","columnNumber","index","classes","length","screen","screenComponent","document","getElementById","scrollIntoView","behavior","unsubscribe","icon","_c","$RefreshReg$"],"sources":["C:/Users/INSA/Desktop/Back end web development/Portfoilo/amlaku-portfolio/src/PortfolioContainer/Home/Header/Header.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TOTAL_SCREENS, GET_SCREEN_INDEX } from '../../../utilities/commonUtils';\r\nimport ScrollService from '../../../utilities/ScrollService';\r\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n\r\n    /* STATES TO BE USED */\r\n    const [selectedScreen, setSelectedScreen] = useState(0);\r\n    const [showHeaderOptions, setShowHeaderOptions] = useState(false);\r\n\r\n    const updateCurrentScreen = (currentScreen) => {\r\n        if (!currentScreen || !currentScreen.screenInView)\r\n            return;\r\n\r\n        let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView);\r\n        if (screenIndex < 0)\r\n            return;\r\n\r\n        setSelectedScreen(screenIndex);\r\n    }\r\n\r\n    /* SUBSCRIPTIONS */\r\n    let currentScreenSubscription = ScrollService.currentScreenBroadcaster.subscribe(updateCurrentScreen);\r\n\r\n    const getHeaderOptions = () => {\r\n        return (\r\n            TOTAL_SCREENS.map((Screen, i) => (\r\n                <div key={Screen.screen_name} className={getHeaderOptionsClasses(i)}\r\n                    onClick={() => switchScreen(i, Screen)}\r\n                >\r\n                    <span>{Screen.screen_name}</span>\r\n                </div>\r\n            ))\r\n        )\r\n    }\r\n\r\n    const getHeaderOptionsClasses = (index) => {\r\n        let classes = \"header-option \";\r\n        if (index < TOTAL_SCREENS.length - 1)\r\n            classes += \"header-option-seperator \";\r\n\r\n        if (selectedScreen === index)\r\n            classes += \"selected-header-option \";\r\n\r\n        return classes;\r\n    }\r\n\r\n    const switchScreen = (index, screen) => {\r\n        let screenComponent = document.getElementById(screen.screen_name);\r\n        if (!screenComponent)\r\n            return;\r\n\r\n        screenComponent.scrollIntoView({ behavior: 'smooth' });\r\n        setSelectedScreen(index);\r\n        setShowHeaderOptions(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            /* UNSUBSCRIBE THE SUBSCRIPTIONS */\r\n            currentScreenSubscription.unsubscribe();\r\n        }\r\n    }, [currentScreenSubscription]);\r\n\r\n    return (\r\n        <div className=\"header-container\" onClick={() => setShowHeaderOptions(!showHeaderOptions)}>\r\n            <div className=\"header-parent\">\r\n                <div className=\"header-hamburger\" onClick={() => setShowHeaderOptions(!showHeaderOptions)}>\r\n                    <FontAwesomeIcon className=\"header-hamburger-bars\" icon={faBars} />\r\n                </div>\r\n                <div className=\"header-logo\">\r\n                    <span>Amlaku~ </span>\r\n                </div>\r\n                <div className={(showHeaderOptions) ? \"header-options show-hamburger-options\" : \"header-options\"}>\r\n                    {getHeaderOptions()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}